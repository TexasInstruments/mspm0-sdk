%%{
/*
 * Copyright (c) 2022, Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== usbclkSource.Board.c.xdt ========
 */

    let Common = system.getScript("/ti/driverlib/Common.js");

    let mod = system.modules["/ti/clockTree/mux.js"];

    let usbclkMuxInst   = system.clockTree?.USBCLKMUX;
    let usbfllGateInst  = system.clockTree?.USBFLLGATE;

    let syspllMuxInst   = system.clockTree?.SYSPLLMUX;
    let exhfMuxInst   = system.clockTree?.EXFHMUX;
    let usbfllStr = "";
    let usbclkStr = "";

    let USBMod = system.modules["/ti/driverlib/USB"];


    /*
        USBFLL
            - is USBFLL enabled?
                - get the referenceSource
                - generate the configUSBFLL function call
            - Validation
                - is the source enabled? (LFXT)
        USBCLK
            - is USB peripheral configured?
                - get USBCLKMUX choice from mux
                - generate the setUSBCLKSource function call
            - Validation
                - is the source enabled (USBFLL, SYSPLL1)
                - host : is it using HFXT through SYSPLL1 ?
    */

    // USBFLL
    if(usbfllGateInst.enable){
        let usbfllReference = usbfllGateInst.referenceSource;
        usbfllStr = "DL_SYSCTL_configUSBFLL(DL_SYSCTL_USBFLL_REFERENCE_"+usbfllReference+");"
    }
    // USBCLK
    if(USBMod){
        let usbclkSource = (_.endsWith(usbclkMuxInst.inputSelect, "USBFLL"))?"USBFLL":"PLLCLK1";
        usbclkStr = "DL_SYSCTL_setUSBCLKSource(DL_SYSCTL_USBCLK_SOURCE_"+usbclkSource+");"
    }
%%}
%
% if(usbfllGateInst.enable){
    `usbfllStr`
% }
% if(USBMod){
    `usbclkStr`
% }
%
